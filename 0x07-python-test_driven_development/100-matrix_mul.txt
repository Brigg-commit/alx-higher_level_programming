TEST FOR 100-matrix_mul.py
=========================

import module
-------------
This module defines a matrix multiplication function ``matrix_mul(m_a, m_b)``.

import module doc
-----------------
Using this matrix_mul = __import__('100-matrix_mul').matrix_mul

import function doc
-------------------
matrix_mul(...) returns a new matrix representing the multiplication of
``m_a`` by ``m_b``.

Test 1
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    >>> m_a = [
    ...[1, 2],
    ...[3, 4],
    ...]
    >>> m_b = m_a
    >>> m_b = m_a
    >>> print(matrix_mul(m_a, m_b))
    [[7, 10], [15, 22]]
    ...

Test 2
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]
    ...

Test 3
    >>> matrix_mul(6, [[3, 4], [4, 5]])
    Traceback (most recent last call)
    ...
    TypeError: m_a must be a list


Test 4
    >>> matrix_mul(8, 5)
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list


Test 5
    >>> matrix_mul([[]], [[]])
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty


Test 6
    >>> matrix_mul([[1, 5], ["Hello", 2]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
	TypeError: m_a should contain only integers or floats


Test 7
    >>> matrix_mul([[4, 5], [6, 7]], [[1, "Smith"], [9, 4]])
	Traceback (most recent call last):
	...
	TypeError: m_b should contain only integers or floats


Test 8
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Test 9
    >>> m_a = [
    ... [1.2, 5.5, 6.2],
    ... [4.66, 12.3, -9.2]
    ... ]
    >>> m_b = [
    ... [5.0, 3.3],
    ... [-2.9, 4.4],
    ... [7.2, 4.4]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    [[34.69, 55.44000000000001], [-78.61, 29.018000000000008]]


Test 10
    >>> print(matrix_mul([], [[5, 4]]))
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty


Test 11
    >>> print(matrix_mul([[1, 8]], [[]]))
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Test 12 
    >>> print(matrix_mul([[1, 2]], [[{"a": 1}, 8.8]]))
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

Test 13
    >>> m_a = [
    ... [1, 4],
    ... [3, 6, 5]
    ... ]
    >>> m_b = m_a
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_a must should be of the same size


Test 14
    >>> m_a = [
    ... [1, 2],
    ... [3, 4]
    ... ]
    >>> m_b = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must should be of the same size


Test 15
    >>> m_a = [
    ... [2, 2],
    ... [3, 2],
    ... ]
    >>> m_b = [
    ... [2, 2],
    ... [2, 6],
    ... [4, 7]
    ... ]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied


